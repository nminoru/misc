SET client_min_messages TO 'warning';
CREATE EXTENSION IF NOT EXISTS whole_row_var_arg;
CREATE TABLE T1 (
       C1 int,
       C2 text,
       C3 float8
);
INSERT INTO T1 (C1, C2, C3) SELECT i, i + 1, i + 2 FROM generate_series(1, 100) AS i;
SELECT S.C1, S.C2, S.C3 FROM (SELECT *, whole_row_var_arg('dummy', T1.*) FROM T1 WHERE C1 % 9 = 0) AS S ORDER BY S.C1;
 c1  |   c2    | c3  
-----+---------+-----
  10 | 10hoge  |  12
  19 | 19hoge  |  21
  28 | 28hoge  |  30
  37 | 37hoge  |  39
  46 | 46hoge  |  48
  55 | 55hoge  |  57
  64 | 64hoge  |  66
  73 | 73hoge  |  75
  82 | 82hoge  |  84
  91 | 91hoge  |  93
 100 | 100hoge | 102
(11 rows)

SELECT S.C1, AVG(S.C3) FROM (SELECT *, whole_row_var_arg('dummy', T1.*) FROM T1 WHERE C1 % 7 = 0) AS S GROUP BY S.C1 ORDER BY S.C1;
 c1 | avg 
----+-----
  8 |  10
 15 |  17
 22 |  24
 29 |  31
 36 |  38
 43 |  45
 50 |  52
 57 |  59
 64 |  66
 71 |  73
 78 |  80
 85 |  87
 92 |  94
 99 | 101
(14 rows)

EXPLAIN (VERBOSE ON, COSTS OFF) SELECT S.C1, AVG(S.C3) FROM (SELECT *, whole_row_var_arg('dummy', T1.*) FROM T1 WHERE C1 % 7 = 0) AS S GROUP BY S.C1 ORDER BY S.C1;
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 GroupAggregate
   Output: s.c1, avg(s.c3)
   Group Key: s.c1
   ->  Sort
         Output: s.c1, s.c3
         Sort Key: s.c1
         ->  Subquery Scan on s
               Output: s.c1, s.c3
               ->  Seq Scan on public.t1
                     Output: t1.c1, NULL::text, t1.c3, whole_row_var_arg('dummy'::text, t1.*)
                     Filter: ((t1.c1 % 7) = 0)
(11 rows)

DROP TABLE T1 CASCADE;
